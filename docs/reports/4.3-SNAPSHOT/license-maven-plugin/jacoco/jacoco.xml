<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="license-maven-plugin"><sessioninfo id="fv-az419-503-6591fdf5" start="1695671954633" dump="1695671959225"/><sessioninfo id="fv-az419-503-aa7dd710" start="1695671988363" dump="1695672000102"/><package name="com/mycila/maven/plugin/license/dependencies"><class name="com/mycila/maven/plugin/license/dependencies/LicensePolicy$Type" sourcefilename="LicensePolicy.java"><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/LicensePolicy" sourcefilename="LicensePolicy.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Type;Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="86"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="91"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRule" desc="()Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Type;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Type;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRule" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/String;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="85"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcerResult" sourcefilename="LicensePolicyEnforcerResult.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;Lorg/apache/maven/model/License;Lorg/apache/maven/artifact/Artifact;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="37"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="42"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicy" desc="()Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArtifact" desc="()Lorg/apache/maven/artifact/Artifact;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowed" desc="()Ljava/lang/Boolean;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuling" desc="()Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLicense" desc="()Lorg/apache/maven/model/License;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/DefaultLicensePolicyEnforcer" sourcefilename="DefaultLicensePolicyEnforcer.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer" sourcefilename="LicensePolicyEnforcer.java"/><class name="com/mycila/maven/plugin/license/dependencies/LicenseMap" sourcefilename="LicenseMap.java"/><class name="com/mycila/maven/plugin/license/dependencies/LicenseURLLicensePolicyEnforcer" sourcefilename="LicenseURLLicensePolicyEnforcer.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/maven/model/License;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/AbstractLicensePolicyEnforcer" sourcefilename="AbstractLicensePolicyEnforcer.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicy" desc="()Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/MavenProjectLicenses" sourcefilename="MavenProjectLicenses.java"><method name="&lt;init&gt;" desc="(Lorg/apache/maven/execution/MavenSession;Ljava/util/Set;Lorg/apache/maven/shared/dependency/graph/DependencyGraphBuilder;Lorg/apache/maven/project/ProjectBuilder;Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;Lorg/apache/maven/plugin/logging/Log;)V" line="65"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/project/MavenProject;Lorg/apache/maven/shared/dependency/graph/DependencyGraphBuilder;Lorg/apache/maven/project/ProjectBuilder;Ljava/util/List;Lorg/apache/maven/plugin/logging/Log;)V" line="83"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLicensesFromArtifact" desc="(Lorg/apache/maven/artifact/Artifact;)Ljava/util/Set;" line="90"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLicenseMapFromArtifacts" desc="(Ljava/util/Set;)Ljava/util/Map;" line="108"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLicenseMap" desc="()Ljava/util/Map;" line="125"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDependencies" desc="()Ljava/util/Set;" line="132"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProjects" desc="()Ljava/util/Set;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSession" desc="(Lorg/apache/maven/execution/MavenSession;)V" line="167"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProjects" desc="(Ljava/util/Set;)V" line="171"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraph" desc="()Lorg/apache/maven/shared/dependency/graph/DependencyGraphBuilder;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraph" desc="(Lorg/apache/maven/shared/dependency/graph/DependencyGraphBuilder;)V" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProjectBuilder" desc="()Lorg/apache/maven/project/ProjectBuilder;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProjectBuilder" desc="(Lorg/apache/maven/project/ProjectBuilder;)V" line="187"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFilter" desc="()Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;" line="191"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFilter" desc="(Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;)V" line="195"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLog" desc="()Lorg/apache/maven/plugin/logging/Log;" line="199"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLog" desc="(Lorg/apache/maven/plugin/logging/Log;)V" line="203"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuildingRequest" desc="()Lorg/apache/maven/project/ProjectBuildingRequest;" line="208"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getDependencies$3" desc="(Ljava/util/Set;Lorg/apache/maven/shared/dependency/graph/DependencyNode;)V" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getDependencies$2" desc="(Ljava/util/Set;Lorg/apache/maven/project/MavenProject;)V" line="140"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getLicenseMapFromArtifacts$1" desc="(Ljava/util/concurrent/ConcurrentMap;Lorg/apache/maven/artifact/Artifact;)V" line="113"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getLicenseMapFromArtifacts$0" desc="(Ljava/util/concurrent/ConcurrentMap;Lorg/apache/maven/artifact/Artifact;Lorg/apache/maven/model/License;)V" line="114"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="277" covered="0"/><counter type="LINE" missed="61" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule" sourcefilename="LicensePolicy.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IZ)V" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicate" desc="()Z" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAllowed" desc="(Z)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Z)Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/AggregateLicensePolicyEnforcer" sourcefilename="AggregateLicensePolicyEnforcer.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initPolicyEnforcer" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;)Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;" line="54"><counter type="INSTRUCTION" missed="9" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnforcers" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;)Ljava/util/Set;" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/maven/model/License;Ljava/util/Set;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;)Ljava/util/Map;" line="88"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/Map;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;)Ljava/util/Map;" line="111"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/Map;)Ljava/util/Map;" line="128"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicenseMap;)Ljava/util/Map;" line="155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEnforcers" desc="(Ljava/util/Set;)V" line="159"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnforcers" desc="()Ljava/util/Set;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPolicies" desc="()Ljava/util/Set;" line="167"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultPolicy" desc="()Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;" line="171"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultPolicy" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;)V" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$apply$7" desc="(Ljava/util/Map;Ljava/util/Map;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$6" desc="(Ljava/util/Map;Ljava/util/Map;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$5" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$4" desc="(Ljava/util/Map;Lorg/apache/maven/model/License;Lorg/apache/maven/artifact/Artifact;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$3" desc="(Ljava/util/Map;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;Lorg/apache/maven/model/License;Ljava/util/Set;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$2" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;Ljava/util/Map$Entry;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$1" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;Lorg/apache/maven/model/License;Ljava/util/Map;Lorg/apache/maven/artifact/Artifact;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEnforcers$0" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy$Rule;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcer;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="216"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="10" covered="37"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/LicenseNameLicensePolicyEnforcer" sourcefilename="LicenseNameLicensePolicyEnforcer.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/maven/model/License;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="37"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/dependencies/LicenseMessage" sourcefilename="LicenseMessage.java"/><class name="com/mycila/maven/plugin/license/dependencies/ArtifactLicensePolicyEnforcer" sourcefilename="ArtifactLicensePolicyEnforcer.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;)V" line="31"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicy;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/maven/artifact/Artifact;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="25"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultLicensePolicyEnforcer.java"><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArtifactLicensePolicyEnforcer.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="25"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AggregateLicensePolicyEnforcer.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="2" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="1" cb="1"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="14" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="15" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="15" mb="0" cb="0"/><line nr="142" mi="0" ci="15" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="216"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="10" covered="37"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LicensePolicy.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="18" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="14" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="8" mb="1" cb="1"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="145"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="4" covered="29"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="2" covered="15"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="LicensePolicyEnforcerResult.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="18" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="1" cb="1"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="8" mb="1" cb="1"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LicensePolicyEnforcer.java"/><sourcefile name="MavenProjectLicenses.java"><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="15" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="12" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="14" ci="0" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="14" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="10" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="11" ci="0" mb="0" cb="0"/><line nr="153" mi="17" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="9" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="9" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="277" covered="0"/><counter type="LINE" missed="61" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LicenseNameLicensePolicyEnforcer.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LicenseMap.java"/><sourcefile name="LicenseMessage.java"/><sourcefile name="AbstractLicensePolicyEnforcer.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LicenseURLLicensePolicyEnforcer.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="334" covered="520"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="81" covered="101"/><counter type="COMPLEXITY" missed="40" covered="53"/><counter type="METHOD" missed="33" covered="48"/><counter type="CLASS" missed="1" covered="10"/></package><package name="com/mycila/maven/plugin/license/util"><class name="com/mycila/maven/plugin/license/util/FileUtils" sourcefilename="FileUtils.java"><method name="write" desc="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/net/URL;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([Ljava/net/URL;Ljava/lang/String;)[Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFirstLines" desc="(Ljava/io/File;ILjava/lang/String;)Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFileToFolder" desc="(Ljava/io/File;Ljava/io/File;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asPath" desc="(Ljava/io/File;)Ljava/nio/file/Path;" line="117"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFilesToFolder" desc="(Ljava/io/File;Ljava/io/File;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$copyFilesToFolder$0" desc="(Ljava/io/File;Ljava/io/File;)V" line="129"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="206"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="4" covered="37"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/util/StringUtils" sourcefilename="StringUtils.java"><method name="rtrim" desc="(Ljava/lang/String;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="padRight" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/util/Selection$1" sourcefilename="Selection.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/util/Selection;Lorg/apache/maven/shared/utils/io/MatchPatterns;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDirectory" desc="(Ljava/lang/String;Ljava/io/File;)Lorg/apache/maven/shared/utils/io/ScanConductor$ScanAction;" line="89"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Ljava/lang/String;Ljava/io/File;)Lorg/apache/maven/shared/utils/io/ScanConductor$ScanAction;" line="97"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/util/Selection" sourcefilename="Selection.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;[Ljava/lang/String;[Ljava/lang/String;ZLorg/apache/maven/plugin/logging/Log;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelectedFiles" desc="()[Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScanner" desc="()Lorg/apache/maven/shared/utils/io/DirectoryScanner;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasedir" desc="()Ljava/io/File;" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncluded" desc="()[Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcluded" desc="()[Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scanIfneeded" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFolderExcludes" desc="()[Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFolderExclusion" desc="(Ljava/lang/String;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildExclusions" desc="(Z[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildInclusions" desc="([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildOverrideInclusions" desc="(Z[Ljava/lang/String;)[Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="271"/><counter type="BRANCH" missed="4" covered="26"/><counter type="LINE" missed="1" covered="51"/><counter type="COMPLEXITY" missed="5" covered="22"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/util/FileContent" sourcefilename="FileContent.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;)V" line="30"><counter type="INSTRUCTION" missed="19" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetTo" desc="(I)V" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rewind" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endReached" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLine" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()I" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(II)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDuplicatedEmptyEndLines" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnix" desc="()Z" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="197"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="3" covered="43"/><counter type="COMPLEXITY" missed="6" covered="20"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StringUtils.java"><line nr="25" mi="0" ci="9" mb="0" cb="2"/><line nr="26" mi="0" ci="5" mb="0" cb="2"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="1" cb="3"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileUtils.java"><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="14" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="2"/><line nr="72" mi="0" ci="12" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="4"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="16" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="15" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="206"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="4" covered="37"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Selection.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="17" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="17" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><line nr="109" mi="2" ci="21" mb="1" cb="3"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="16" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="1" cb="3"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="13" mb="1" cb="3"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="1" cb="5"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="292"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="5" covered="26"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FileContent.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="2"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="18" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="23" mb="1" cb="5"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="12" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="1" cb="1"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="2" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="4"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="1" cb="1"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="197"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="3" covered="43"/><counter type="COMPLEXITY" missed="6" covered="20"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="53" covered="748"/><counter type="BRANCH" missed="10" covered="68"/><counter type="LINE" missed="8" covered="145"/><counter type="COMPLEXITY" missed="13" covered="67"/><counter type="METHOD" missed="3" covered="38"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/mycila/maven/plugin/license"><class name="com/mycila/maven/plugin/license/LicenseSet" sourcefilename="LicenseSet.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/LicenseRemoveMojo$1" sourcefilename="LicenseRemoveMojo.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/LicenseRemoveMojo;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onHeaderNotFound" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/Header;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onExistingHeader" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/Header;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/Report$Action" sourcefilename="Report.java"><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/HeaderSection" sourcefilename="HeaderSection.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKey" desc="(Ljava/lang/String;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultValue" desc="(Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnsureMatch" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEnsureMatch" desc="(Ljava/lang/String;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultiLineMatch" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMultiLineMatch" desc="(Z)V" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/AbstractLicenseMojo$AbstractCallback" sourcefilename="AbstractLicenseMojo.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/AbstractLicenseMojo;)V" line="465"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onUnknownFile" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/Header;)V" line="474"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkUnknown" desc="()V" line="480"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/HelpMojo" sourcefilename="HelpMojo.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/w3c/dom/Document;" line="68"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="()V" line="100"><counter type="INSTRUCTION" missed="178" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotEmpty" desc="(Ljava/lang/String;)Z" line="165"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/lang/String;" line="171"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSingleChild" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/Node;" line="177"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findNamedChild" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/util/List;" line="191"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findSingleChild" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/Node;" line="207"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeGoal" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;Lorg/w3c/dom/Element;)V" line="222"><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeParameter" desc="(Ljava/lang/StringBuilder;Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)V" line="262"><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="repeat" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="310"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;I)V" line="330"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLines" desc="(Ljava/lang/String;III)Ljava/util/List;" line="348"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLines" desc="(Ljava/util/List;Ljava/lang/String;II)V" line="372"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndentLevel" desc="(Ljava/lang/String;)I" line="421"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyFromExpression" desc="(Ljava/lang/String;)Ljava/lang/String;" line="439"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="864" covered="0"/><counter type="BRANCH" missed="112" covered="0"/><counter type="LINE" missed="156" covered="0"/><counter type="COMPLEXITY" missed="72" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/mycila/maven/plugin/license/AbstractLicenseMojo" sourcefilename="AbstractLicenseMojo.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lcom/mycila/maven/plugin/license/Callback;)V" line="494"><counter type="INSTRUCTION" missed="17" covered="50"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCanonicalFile" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;" line="526"><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeForLicenseSets" desc="([Lcom/mycila/maven/plugin/license/LicenseSet;Lcom/mycila/maven/plugin/license/Callback;)V" line="537"><counter type="INSTRUCTION" missed="13" covered="77"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectLegacyUse" desc="()Z" line="564"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertLegacyConfigToLicenseSet" desc="()Lcom/mycila/maven/plugin/license/LicenseSet;" line="575"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeForLicenseSet" desc="(Lcom/mycila/maven/plugin/license/LicenseSet;Lcom/mycila/maven/plugin/license/Callback;)V" line="592"><counter type="INSTRUCTION" missed="70" covered="254"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="19" covered="43"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasHeader" desc="(Lcom/mycila/maven/plugin/license/LicenseSet;)Z" line="748"><counter type="INSTRUCTION" missed="26" covered="16"/><counter type="BRANCH" missed="13" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfExecutorThreads" desc="()I" line="756"><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultProperties" desc="()Ljava/util/Map;" line="763"><counter type="INSTRUCTION" missed="18" covered="94"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listSelectedFiles" desc="(Lcom/mycila/maven/plugin/license/LicenseSet;)[Ljava/lang/String;" line="795"><counter type="INSTRUCTION" missed="4" covered="62"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildExcludes" desc="(Lcom/mycila/maven/plugin/license/LicenseSet;)[Ljava/lang/String;" line="806"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="info" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="817"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debug" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="823"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warn" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="829"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMapping" desc="()Ljava/util/Map;" line="835"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildHeaderDefinitions" desc="(Lcom/mycila/maven/plugin/license/LicenseSet;Lcom/mycila/maven/plugin/license/util/resource/ResourceFinder;)Ljava/util/Map;" line="853"><counter type="INSTRUCTION" missed="25" covered="84"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadHeaderDefinition" desc="(Ljava/lang/String;Lcom/mycila/maven/plugin/license/util/resource/ResourceFinder;)Ljava/util/Map;" line="881"><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecryptedServers" desc="()Ljava/util/List;" line="898"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findCredentials" desc="(Ljava/lang/String;)Lcom/mycila/maven/plugin/license/Credentials;" line="912"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="starEncrypt" desc="(Ljava/lang/String;)Ljava/lang/String;" line="932"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstNonNull" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="939"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$executeForLicenseSet$0" desc="(Lcom/mycila/maven/plugin/license/document/DocumentFactory;Ljava/lang/String;Lcom/mycila/maven/plugin/license/Callback;Lcom/mycila/maven/plugin/license/header/Header;Ljava/util/List;)V" line="692"><counter type="INSTRUCTION" missed="1" covered="85"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="289" covered="1138"/><counter type="BRANCH" missed="52" covered="110"/><counter type="LINE" missed="50" covered="209"/><counter type="COMPLEXITY" missed="41" covered="64"/><counter type="METHOD" missed="2" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/LicenseRemoveMojo" sourcefilename="LicenseRemoveMojo.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/mycila/maven/plugin/license/document/Document;)V" line="62"><counter type="INSTRUCTION" missed="31" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="62"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/Credentials" sourcefilename="Credentials.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLogin" desc="()Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPassword" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/mycila/maven/plugin/license/Callback" sourcefilename="Callback.java"/><class name="com/mycila/maven/plugin/license/LicenseFormatMojo" sourcefilename="LicenseFormatMojo.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/PropertiesProvider" sourcefilename="PropertiesProvider.java"><method name="init" desc="(Lcom/mycila/maven/plugin/license/AbstractLicenseMojo;Ljava/util/Map;)V" line="30"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustProperties" desc="(Lcom/mycila/maven/plugin/license/AbstractLicenseMojo;Ljava/util/Map;Lcom/mycila/maven/plugin/license/document/Document;)Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAdditionalProperties" desc="(Lcom/mycila/maven/plugin/license/AbstractLicenseMojo;Ljava/util/Properties;Lcom/mycila/maven/plugin/license/document/Document;)Ljava/util/Map;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="50"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/mycila/maven/plugin/license/LicenseCheckMojo$1" sourcefilename="LicenseCheckMojo.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/LicenseCheckMojo;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onHeaderNotFound" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/Header;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onExistingHeader" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/Header;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/LicenseFormatMojo$1" sourcefilename="LicenseFormatMojo.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/LicenseFormatMojo;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onHeaderNotFound" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/Header;)V" line="43"><counter type="INSTRUCTION" missed="32" covered="67"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onExistingHeader" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/Header;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="93"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/Default" sourcefilename="Default.java"><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="591"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="591"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/AbstractLicenseMojo$1" sourcefilename="AbstractLicenseMojo.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/AbstractLicenseMojo;Ljava/util/Map;Ljava/util/List;)V" line="643"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Lcom/mycila/maven/plugin/license/document/Document;)Ljava/util/Map;" line="647"><counter type="INSTRUCTION" missed="20" covered="114"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="126"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/Report" sourcefilename="Report.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/mycila/maven/plugin/license/Report$Action;Lorg/apache/maven/project/MavenProject;Ljava/time/Clock;Z)V" line="85"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/io/File;Lcom/mycila/maven/plugin/license/Report$Result;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exportTo" desc="(Ljava/io/File;)V" line="104"><counter type="INSTRUCTION" missed="44" covered="216"/><counter type="BRANCH" missed="11" covered="14"/><counter type="LINE" missed="6" covered="38"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$exportTo$3" desc="(Lcom/google/gson/JsonArray;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;" line="167"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$exportTo$2" desc="(Lcom/google/gson/JsonArray;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonArray;" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$exportTo$1" desc="(Ljava/util/Map$Entry;)Lcom/google/gson/JsonObject;" line="159"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$exportTo$0" desc="(Lcom/mycila/xmltool/XMLTag;Ljava/util/Map$Entry;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="309"/><counter type="BRANCH" missed="12" covered="15"/><counter type="LINE" missed="8" covered="59"/><counter type="COMPLEXITY" missed="13" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/HeaderStyle" sourcefilename="HeaderStyle.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toHeaderDefinition" desc="()Lcom/mycila/maven/plugin/license/header/HeaderDefinition;" line="101"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/Multi" sourcefilename="Multi.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPreamble" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPreamble" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeaders" desc="()[Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeader" desc="(Ljava/lang/String;)V" line="81"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHeaders" desc="([Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInlineHeaders" desc="()[Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInlineHeader" desc="(Ljava/lang/String;)V" line="108"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInlineHeaders" desc="([Ljava/lang/String;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeparators" desc="()[Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSeparator" desc="(Ljava/lang/String;)V" line="135"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSeparators" desc="([Ljava/lang/String;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="27"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="11"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/LicenseCheckMojo" sourcefilename="LicenseCheckMojo.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="52"><counter type="INSTRUCTION" missed="55" covered="56"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="10" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execute$1" desc="(Ljava/lang/StringBuilder;Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcerResult;)V" line="94"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$execute$0" desc="(Lcom/mycila/maven/plugin/license/dependencies/LicensePolicyEnforcerResult;)Z" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="67"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/Report$Result" sourcefilename="Report.java"><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Multi.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="9" ci="0" mb="0" cb="0"/><line nr="84" mi="11" ci="0" mb="0" cb="0"/><line nr="85" mi="9" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="111" mi="11" ci="0" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="2" cb="0"/><line nr="136" mi="9" ci="0" mb="0" cb="0"/><line nr="138" mi="11" ci="0" mb="0" cb="0"/><line nr="139" mi="9" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="103" covered="27"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="11"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeaderSection.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertiesProvider.java"><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Default.java"><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="584" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="591"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractLicenseMojo.java"><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="11" mb="0" cb="0"/><line nr="475" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="7" mb="0" cb="0"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="2"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="2"/><line nr="484" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="5" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="1" cb="1"/><line nr="495" mi="0" ci="6" mb="0" cb="4"/><line nr="496" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="7" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="2"/><line nr="508" mi="0" ci="3" mb="1" cb="1"/><line nr="509" mi="0" ci="8" mb="0" cb="0"/><line nr="511" mi="10" ci="0" mb="0" cb="0"/><line nr="512" mi="7" ci="0" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="521" mi="0" ci="5" mb="0" cb="0"/><line nr="523" mi="0" ci="1" mb="0" cb="0"/><line nr="526" mi="0" ci="2" mb="0" cb="2"/><line nr="527" mi="0" ci="2" mb="0" cb="0"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="531" mi="1" ci="0" mb="0" cb="0"/><line nr="532" mi="13" ci="0" mb="0" cb="0"/><line nr="537" mi="0" ci="5" mb="1" cb="3"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="543" mi="0" ci="8" mb="0" cb="2"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="0" ci="4" mb="1" cb="1"/><line nr="546" mi="12" ci="0" mb="0" cb="0"/><line nr="547" mi="1" ci="0" mb="0" cb="0"/><line nr="550" mi="0" ci="16" mb="0" cb="0"/><line nr="552" mi="0" ci="3" mb="0" cb="2"/><line nr="553" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="0" ci="5" mb="0" cb="0"/><line nr="558" mi="0" ci="16" mb="0" cb="2"/><line nr="559" mi="0" ci="4" mb="0" cb="0"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="564" mi="0" ci="44" mb="5" cb="19"/><line nr="571" mi="0" ci="5" mb="0" cb="2"/><line nr="575" mi="0" ci="10" mb="1" cb="5"/><line nr="576" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="4" mb="0" cb="0"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="581" mi="0" ci="4" mb="0" cb="0"/><line nr="582" mi="0" ci="4" mb="0" cb="0"/><line nr="583" mi="0" ci="4" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="585" mi="0" ci="4" mb="0" cb="0"/><line nr="586" mi="0" ci="4" mb="0" cb="0"/><line nr="587" mi="0" ci="4" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="592" mi="0" ci="12" mb="0" cb="0"/><line nr="594" mi="0" ci="5" mb="0" cb="0"/><line nr="595" mi="1" ci="0" mb="0" cb="0"/><line nr="596" mi="7" ci="0" mb="0" cb="0"/><line nr="597" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="0" ci="5" mb="0" cb="0"/><line nr="600" mi="0" ci="11" mb="0" cb="0"/><line nr="601" mi="0" ci="7" mb="0" cb="0"/><line nr="602" mi="0" ci="10" mb="0" cb="0"/><line nr="604" mi="0" ci="3" mb="1" cb="1"/><line nr="605" mi="4" ci="0" mb="0" cb="0"/><line nr="607" mi="0" ci="7" mb="0" cb="0"/><line nr="608" mi="0" ci="17" mb="0" cb="2"/><line nr="609" mi="0" ci="8" mb="0" cb="0"/><line nr="611" mi="0" ci="9" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="0"/><line nr="617" mi="0" ci="3" mb="1" cb="1"/><line nr="618" mi="4" ci="8" mb="1" cb="1"/><line nr="619" mi="5" ci="0" mb="2" cb="0"/><line nr="620" mi="9" ci="0" mb="0" cb="0"/><line nr="622" mi="1" ci="0" mb="0" cb="0"/><line nr="625" mi="0" ci="4" mb="0" cb="2"/><line nr="626" mi="0" ci="9" mb="0" cb="0"/><line nr="627" mi="0" ci="5" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="633" mi="0" ci="3" mb="0" cb="0"/><line nr="637" mi="0" ci="11" mb="0" cb="2"/><line nr="638" mi="0" ci="2" mb="0" cb="0"/><line nr="639" mi="0" ci="4" mb="0" cb="0"/><line nr="640" mi="0" ci="4" mb="0" cb="0"/><line nr="641" mi="0" ci="1" mb="0" cb="0"/><line nr="643" mi="0" ci="19" mb="0" cb="0"/><line nr="647" mi="0" ci="6" mb="0" cb="0"/><line nr="648" mi="0" ci="7" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="0" cb="0"/><line nr="652" mi="0" ci="11" mb="0" cb="2"/><line nr="654" mi="0" ci="7" mb="0" cb="0"/><line nr="656" mi="0" ci="5" mb="0" cb="2"/><line nr="657" mi="0" ci="17" mb="0" cb="0"/><line nr="660" mi="0" ci="11" mb="0" cb="2"/><line nr="661" mi="0" ci="3" mb="1" cb="1"/><line nr="662" mi="0" ci="10" mb="0" cb="0"/><line nr="664" mi="5" ci="0" mb="0" cb="0"/><line nr="666" mi="0" ci="1" mb="0" cb="0"/><line nr="667" mi="1" ci="0" mb="0" cb="0"/><line nr="668" mi="14" ci="0" mb="0" cb="0"/><line nr="669" mi="0" ci="1" mb="0" cb="0"/><line nr="670" mi="0" ci="1" mb="0" cb="0"/><line nr="672" mi="0" ci="5" mb="0" cb="2"/><line nr="673" mi="0" ci="17" mb="0" cb="0"/><line nr="674" mi="0" ci="7" mb="0" cb="0"/><line nr="677" mi="0" ci="2" mb="0" cb="0"/><line nr="681" mi="0" ci="6" mb="0" cb="0"/><line nr="682" mi="0" ci="7" mb="0" cb="0"/><line nr="683" mi="0" ci="8" mb="0" cb="0"/><line nr="686" mi="0" ci="5" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="688" mi="0" ci="10" mb="0" cb="0"/><line nr="690" mi="0" ci="18" mb="0" cb="2"/><line nr="691" mi="0" ci="11" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="693" mi="0" ci="13" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="0" cb="2"/><line nr="696" mi="0" ci="5" mb="0" cb="0"/><line nr="697" mi="0" ci="4" mb="0" cb="2"/><line nr="698" mi="0" ci="11" mb="0" cb="0"/><line nr="699" mi="0" ci="6" mb="0" cb="2"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="702" mi="0" ci="2" mb="0" cb="0"/><line nr="703" mi="0" ci="10" mb="0" cb="2"/><line nr="704" mi="0" ci="6" mb="0" cb="0"/><line nr="705" mi="0" ci="2" mb="1" cb="1"/><line nr="706" mi="0" ci="4" mb="0" cb="0"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="1" ci="0" mb="0" cb="0"/><line nr="710" mi="0" ci="2" mb="0" cb="2"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="714" mi="0" ci="1" mb="0" cb="0"/><line nr="715" mi="0" ci="1" mb="0" cb="0"/><line nr="718" mi="0" ci="3" mb="0" cb="2"/><line nr="720" mi="0" ci="4" mb="0" cb="0"/><line nr="721" mi="1" ci="0" mb="0" cb="0"/><line nr="722" mi="2" ci="0" mb="0" cb="0"/><line nr="723" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="3" ci="0" mb="0" cb="0"/><line nr="725" mi="3" ci="0" mb="2" cb="0"/><line nr="726" mi="3" ci="0" mb="0" cb="0"/><line nr="728" mi="3" ci="0" mb="2" cb="0"/><line nr="729" mi="3" ci="0" mb="0" cb="0"/><line nr="731" mi="3" ci="0" mb="2" cb="0"/><line nr="732" mi="3" ci="0" mb="0" cb="0"/><line nr="734" mi="3" ci="0" mb="2" cb="0"/><line nr="735" mi="3" ci="0" mb="0" cb="0"/><line nr="737" mi="7" ci="0" mb="0" cb="0"/><line nr="738" mi="1" ci="1" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><line nr="745" mi="0" ci="1" mb="0" cb="0"/><line nr="748" mi="23" ci="4" mb="9" cb="1"/><line nr="751" mi="2" ci="8" mb="3" cb="3"/><line nr="752" mi="1" ci="4" mb="1" cb="1"/><line nr="756" mi="0" ci="4" mb="1" cb="1"/><line nr="757" mi="3" ci="0" mb="0" cb="0"/><line nr="758" mi="0" ci="9" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="0" cb="0"/><line nr="764" mi="0" ci="3" mb="0" cb="0"/><line nr="766" mi="0" ci="7" mb="0" cb="0"/><line nr="767" mi="0" ci="7" mb="0" cb="0"/><line nr="768" mi="0" ci="7" mb="0" cb="0"/><line nr="769" mi="0" ci="7" mb="0" cb="0"/><line nr="770" mi="0" ci="7" mb="0" cb="0"/><line nr="771" mi="0" ci="7" mb="0" cb="0"/><line nr="772" mi="0" ci="7" mb="0" cb="0"/><line nr="773" mi="0" ci="7" mb="0" cb="0"/><line nr="774" mi="0" ci="4" mb="0" cb="0"/><line nr="775" mi="0" ci="2" mb="1" cb="1"/><line nr="776" mi="6" ci="0" mb="0" cb="0"/><line nr="777" mi="6" ci="0" mb="0" cb="0"/><line nr="778" mi="6" ci="0" mb="0" cb="0"/><line nr="782" mi="0" ci="3" mb="1" cb="1"/><line nr="783" mi="0" ci="4" mb="0" cb="0"/><line nr="787" mi="0" ci="11" mb="0" cb="2"/><line nr="788" mi="0" ci="6" mb="0" cb="0"/><line nr="789" mi="0" ci="1" mb="0" cb="0"/><line nr="791" mi="0" ci="2" mb="0" cb="0"/><line nr="795" mi="4" ci="6" mb="1" cb="1"/><line nr="796" mi="0" ci="6" mb="0" cb="0"/><line nr="797" mi="0" ci="9" mb="0" cb="0"/><line nr="798" mi="0" ci="3" mb="0" cb="0"/><line nr="799" mi="0" ci="13" mb="0" cb="0"/><line nr="800" mi="0" ci="11" mb="0" cb="0"/><line nr="801" mi="0" ci="11" mb="0" cb="0"/><line nr="802" mi="0" ci="3" mb="0" cb="0"/><line nr="806" mi="0" ci="4" mb="0" cb="0"/><line nr="807" mi="0" ci="6" mb="0" cb="0"/><line nr="808" mi="0" ci="10" mb="2" cb="4"/><line nr="809" mi="0" ci="12" mb="0" cb="2"/><line nr="810" mi="0" ci="11" mb="0" cb="0"/><line nr="811" mi="0" ci="1" mb="0" cb="0"/><line nr="813" mi="0" ci="7" mb="0" cb="0"/><line nr="817" mi="0" ci="3" mb="1" cb="1"/><line nr="818" mi="0" ci="6" mb="0" cb="0"/><line nr="820" mi="0" ci="1" mb="0" cb="0"/><line nr="823" mi="0" ci="3" mb="0" cb="2"/><line nr="824" mi="0" ci="6" mb="0" cb="0"/><line nr="826" mi="0" ci="1" mb="0" cb="0"/><line nr="829" mi="0" ci="3" mb="0" cb="2"/><line nr="830" mi="0" ci="6" mb="0" cb="0"/><line nr="832" mi="0" ci="1" mb="0" cb="0"/><line nr="835" mi="0" ci="4" mb="0" cb="0"/><line nr="837" mi="0" ci="7" mb="0" cb="0"/><line nr="838" mi="0" ci="12" mb="0" cb="2"/><line nr="839" mi="0" ci="11" mb="0" cb="0"/><line nr="840" mi="0" ci="1" mb="0" cb="0"/><line nr="841" mi="0" ci="3" mb="0" cb="2"/><line nr="842" mi="0" ci="11" mb="0" cb="2"/><line nr="843" mi="0" ci="5" mb="0" cb="2"/><line nr="844" mi="0" ci="9" mb="0" cb="0"/><line nr="846" mi="0" ci="1" mb="0" cb="0"/><line nr="848" mi="0" ci="2" mb="0" cb="0"/><line nr="853" mi="0" ci="5" mb="0" cb="0"/><line nr="856" mi="0" ci="17" mb="0" cb="2"/><line nr="857" mi="0" ci="6" mb="0" cb="0"/><line nr="861" mi="0" ci="17" mb="0" cb="2"/><line nr="862" mi="0" ci="7" mb="0" cb="0"/><line nr="866" mi="6" ci="11" mb="1" cb="1"/><line nr="867" mi="6" ci="0" mb="0" cb="0"/><line nr="870" mi="6" ci="11" mb="1" cb="1"/><line nr="871" mi="7" ci="0" mb="0" cb="0"/><line nr="875" mi="0" ci="8" mb="0" cb="0"/><line nr="876" mi="0" ci="2" mb="0" cb="0"/><line nr="881" mi="0" ci="8" mb="0" cb="0"/><line nr="882" mi="0" ci="4" mb="0" cb="0"/><line nr="883" mi="0" ci="7" mb="0" cb="0"/><line nr="884" mi="0" ci="3" mb="0" cb="0"/><line nr="885" mi="0" ci="15" mb="0" cb="0"/><line nr="886" mi="0" ci="2" mb="0" cb="0"/><line nr="887" mi="1" ci="0" mb="0" cb="0"/><line nr="888" mi="13" ci="0" mb="0" cb="0"/><line nr="898" mi="4" ci="0" mb="0" cb="0"/><line nr="899" mi="6" ci="0" mb="0" cb="0"/><line nr="900" mi="5" ci="0" mb="0" cb="0"/><line nr="901" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="2" ci="0" mb="2" cb="0"/><line nr="913" mi="2" ci="0" mb="0" cb="0"/><line nr="916" mi="3" ci="0" mb="0" cb="0"/><line nr="918" mi="10" ci="0" mb="2" cb="0"/><line nr="919" mi="5" ci="0" mb="2" cb="0"/><line nr="920" mi="13" ci="0" mb="0" cb="0"/><line nr="921" mi="5" ci="0" mb="0" cb="0"/><line nr="922" mi="4" ci="0" mb="0" cb="0"/><line nr="923" mi="8" ci="0" mb="0" cb="0"/><line nr="925" mi="1" ci="0" mb="0" cb="0"/><line nr="927" mi="11" ci="0" mb="0" cb="0"/><line nr="928" mi="2" ci="0" mb="0" cb="0"/><line nr="932" mi="0" ci="2" mb="0" cb="2"/><line nr="933" mi="0" ci="2" mb="0" cb="0"/><line nr="935" mi="0" ci="5" mb="0" cb="0"/><line nr="939" mi="0" ci="2" mb="0" cb="2"/><line nr="940" mi="0" ci="2" mb="0" cb="0"/><line nr="942" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="309" covered="1321"/><counter type="BRANCH" missed="53" covered="123"/><counter type="LINE" missed="53" covered="238"/><counter type="COMPLEXITY" missed="42" covered="75"/><counter type="METHOD" missed="2" covered="27"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Callback.java"/><sourcefile name="HeaderStyle.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="26" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LicenseRemoveMojo.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="1" cb="1"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="11" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="70" mi="9" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="101"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LicenseSet.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LicenseCheckMojo.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="14" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="16" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="147"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="13" covered="29"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LicenseFormatMojo.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="1" cb="1"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="1" cb="1"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="11" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="10" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="128"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="4" covered="25"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="HelpMojo.java"><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="19" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="4" cb="0"/><line nr="122" mi="15" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="4" cb="0"/><line nr="147" mi="21" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="10" ci="0" mb="2" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="9" ci="0" mb="4" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="14" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="2" cb="0"/><line nr="184" mi="14" ci="0" mb="0" cb="0"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="8" ci="0" mb="2" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="2" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="2" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="2" cb="0"/><line nr="214" mi="14" ci="0" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="12" ci="0" mb="6" cb="0"/><line nr="227" mi="14" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="6" ci="0" mb="4" cb="0"/><line nr="231" mi="13" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="4" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="7" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="2" cb="0"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="2" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="10" ci="0" mb="2" cb="0"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="2" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="4" cb="0"/><line nr="274" mi="13" ci="0" mb="0" cb="0"/><line nr="276" mi="12" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="4" cb="0"/><line nr="280" mi="13" ci="0" mb="0" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="2" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="6" ci="0" mb="2" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="6" ci="0" mb="4" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="12" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="8" ci="0" mb="0" cb="0"/><line nr="312" mi="7" ci="0" mb="2" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="330" mi="16" ci="0" mb="2" cb="0"/><line nr="332" mi="6" ci="0" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="16" ci="0" mb="2" cb="0"/><line nr="356" mi="12" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="5" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="16" ci="0" mb="2" cb="0"/><line nr="379" mi="3" ci="0" mb="2" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="9" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="393" mi="8" ci="0" mb="2" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="3" ci="0" mb="2" cb="0"/><line nr="398" mi="12" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="2" cb="0"/><line nr="402" mi="5" ci="0" mb="0" cb="0"/><line nr="406" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="421" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="13" ci="0" mb="4" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="426" mi="15" ci="0" mb="4" cb="0"/><line nr="428" mi="5" ci="0" mb="2" cb="0"/><line nr="430" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="1" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="439" mi="12" ci="0" mb="6" cb="0"/><line nr="440" mi="4" ci="0" mb="2" cb="0"/><line nr="443" mi="8" ci="0" mb="0" cb="0"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="864" covered="0"/><counter type="BRANCH" missed="112" covered="0"/><counter type="LINE" missed="156" covered="0"/><counter type="COMPLEXITY" missed="72" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Report.java"><line nr="41" mi="0" ci="21" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="1" cb="3"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="1" ci="10" mb="1" cb="1"/><line nr="113" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="1" cb="2"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="2" ci="9" mb="1" cb="1"/><line nr="130" mi="2" ci="9" mb="1" cb="1"/><line nr="131" mi="2" ci="8" mb="1" cb="1"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="15" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="2" ci="13" mb="1" cb="1"/><line nr="151" mi="2" ci="13" mb="1" cb="1"/><line nr="152" mi="2" ci="13" mb="1" cb="1"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="9" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="16" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="9" mb="0" cb="0"/><line nr="161" mi="0" ci="10" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="14" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="375"/><counter type="BRANCH" missed="12" covered="15"/><counter type="LINE" missed="8" covered="68"/><counter type="COMPLEXITY" missed="13" covered="10"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Credentials.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1489" covered="2805"/><counter type="BRANCH" missed="192" covered="157"/><counter type="LINE" missed="267" covered="424"/><counter type="COMPLEXITY" missed="151" covered="128"/><counter type="METHOD" missed="32" covered="72"/><counter type="CLASS" missed="3" covered="17"/></package><package name="com/mycila/maven/plugin/license/header"><class name="com/mycila/maven/plugin/license/header/HeaderSource$UrlHeaderSource" sourcefilename="HeaderSource.java"><method name="&lt;init&gt;" desc="(Ljava/net/URL;Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFromUrl" desc="(Ljava/net/URL;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/HeaderSource$LiteralHeaderSource" sourcefilename="HeaderSource.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFromUrl" desc="(Ljava/net/URL;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/Header" sourcefilename="Header.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/header/HeaderSource;[Lcom/mycila/maven/plugin/license/HeaderSection;)V" line="53"><counter type="INSTRUCTION" missed="19" covered="75"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asOneLineString" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineCount" desc="()I" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocation" desc="()Lcom/mycila/maven/plugin/license/header/HeaderSource;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eol" desc="(Z)Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildForDefinition" desc="(Lcom/mycila/maven/plugin/license/header/HeaderDefinition;Z)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLines" desc="()[Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatchForText" desc="(Ljava/lang/String;Lcom/mycila/maven/plugin/license/header/HeaderDefinition;Z)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatchForText" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/mycila/maven/plugin/license/header/HeaderDefinition;Z)Z" line="164"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatchForText" desc="(Lcom/mycila/maven/plugin/license/document/Document;Lcom/mycila/maven/plugin/license/header/HeaderDefinition;ZLjava/lang/String;)Z" line="176"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyDefinitionAndSections" desc="(Lcom/mycila/maven/plugin/license/header/HeaderDefinition;Z)Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="6" covered="114"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEmpty" desc="(Ljava/lang/String;)Z" line="225"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSectionsByIndex" desc="(Ljava/lang/String;)Ljava/util/SortedMap;" line="239"><counter type="INSTRUCTION" missed="19" covered="89"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildExpectedTextBetweenSections" desc="(Ljava/lang/String;Ljava/util/SortedMap;)Ljava/util/List;" line="305"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recursivelyFindMatch" desc="(Ljava/lang/String;Lcom/mycila/maven/plugin/license/header/HeaderDefinition;Ljava/util/List;Ljava/util/List;II)Z" line="355"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureSectionMatch" desc="(Lcom/mycila/maven/plugin/license/header/HeaderDefinition;Lcom/mycila/maven/plugin/license/HeaderSection;Ljava/lang/String;)Z" line="397"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="722"/><counter type="BRANCH" missed="7" covered="75"/><counter type="LINE" missed="10" covered="144"/><counter type="COMPLEXITY" missed="10" covered="50"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/AdditionalHeaderDefinition$FeedProperty" sourcefilename="AdditionalHeaderDefinition.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/header/HeaderDefinition;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lcom/mycila/xmltool/XMLTag;)V" line="108"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/HeaderSource$MultiUrlHeaderSource" sourcefilename="HeaderSource.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/net/URL;[Ljava/lang/String;Ljava/lang/String;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFromUrl" desc="(Ljava/net/URL;)Z" line="115"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="13"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/AdditionalHeaderDefinition$1" sourcefilename="AdditionalHeaderDefinition.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/header/AdditionalHeaderDefinition;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lcom/mycila/xmltool/XMLTag;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/HeaderParser" sourcefilename="HeaderParser.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/maven/plugin/license/util/FileContent;Lcom/mycila/maven/plugin/license/header/HeaderDefinition;[Ljava/lang/String;)V" line="50"><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginPosition" desc="()I" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndPosition" desc="()I" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gotAnyHeader" desc="()Z" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileContent" desc="()Lcom/mycila/maven/plugin/license/util/FileContent;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeaderDefinition" desc="()Lcom/mycila/maven/plugin/license/header/HeaderDefinition;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBeginPosition" desc="()I" line="111"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasHeader" desc="()Z" line="143"><counter type="INSTRUCTION" missed="10" covered="259"/><counter type="BRANCH" missed="9" covered="59"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="9" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findEndPosition" desc="()I" line="237"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="427"/><counter type="BRANCH" missed="12" covered="86"/><counter type="LINE" missed="4" covered="87"/><counter type="COMPLEXITY" missed="12" covered="46"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/HeaderType" sourcefilename="HeaderType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZ)V" line="86"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefinition" desc="()Lcom/mycila/maven/plugin/license/header/HeaderDefinition;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromName" desc="(Ljava/lang/String;)Lcom/mycila/maven/plugin/license/header/HeaderType;" line="107"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultDefinitions" desc="()Ljava/util/Map;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="577"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="606"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="44"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/HeaderSource$MultiLiteralHeaderSource" sourcefilename="HeaderSource.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFromUrl" desc="(Ljava/net/URL;)Z" line="92"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/AdditionalHeaderDefinition" sourcefilename="AdditionalHeaderDefinition.java"><method name="&lt;init&gt;" desc="(Lcom/mycila/xmltool/XMLTag;)V" line="62"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefinitions" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/HeaderDefinition" sourcefilename="HeaderDefinition.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZ)V" line="62"><counter type="INSTRUCTION" missed="14" covered="52"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compile" desc="(Ljava/lang/String;)Ljava/util/regex/Pattern;" line="98"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstLine" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeforeEachLine" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndLine" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAfterEachLine" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowBlankLines" desc="()Z" line="122"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPadLines" desc="()Z" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSkipLine" desc="(Ljava/lang/String;)Z" line="137"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFirstHeaderLine" desc="(Ljava/lang/String;)Z" line="147"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLastHeaderLine" desc="(Ljava/lang/String;)Z" line="157"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSkipLinePattern" desc="()Ljava/util/regex/Pattern;" line="161"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPropertyFromString" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="174"><counter type="INSTRUCTION" missed="21" covered="93"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="()V" line="207"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Ljava/lang/String;Ljava/lang/Boolean;)V" line="219"><counter type="INSTRUCTION" missed="17" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Ljava/lang/String;Ljava/util/regex/Pattern;)V" line="231"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Ljava/lang/String;)Z" line="237"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="242"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="254"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="259"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultiLine" desc="()Z" line="263"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="347"/><counter type="BRANCH" missed="28" covered="48"/><counter type="LINE" missed="12" covered="76"/><counter type="COMPLEXITY" missed="23" covered="39"/><counter type="METHOD" missed="2" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/header/HeaderSource" sourcefilename="HeaderSource.java"><method name="combineHeaders" desc="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="16" covered="81"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/mycila/maven/plugin/license/util/resource/ResourceFinder;)Lcom/mycila/maven/plugin/license/header/HeaderSource;" line="184"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lcom/mycila/maven/plugin/license/Multi;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mycila/maven/plugin/license/util/resource/ResourceFinder;)Lcom/mycila/maven/plugin/license/header/HeaderSource;" line="200"><counter type="INSTRUCTION" missed="53" covered="96"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="245"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="254"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInline" desc="()Z" line="262"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="74" covered="192"/><counter type="BRANCH" missed="6" covered="28"/><counter type="LINE" missed="14" covered="44"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HeaderType.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="0" cb="0"/><line nr="34" mi="0" ci="16" mb="0" cb="0"/><line nr="35" mi="0" ci="16" mb="0" cb="0"/><line nr="36" mi="0" ci="16" mb="0" cb="0"/><line nr="37" mi="0" ci="16" mb="0" cb="0"/><line nr="38" mi="0" ci="16" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="0"/><line nr="40" mi="0" ci="16" mb="0" cb="0"/><line nr="41" mi="0" ci="16" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="16" mb="0" cb="0"/><line nr="44" mi="0" ci="16" mb="0" cb="0"/><line nr="45" mi="0" ci="16" mb="0" cb="0"/><line nr="46" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="16" mb="0" cb="0"/><line nr="48" mi="0" ci="16" mb="0" cb="0"/><line nr="49" mi="0" ci="16" mb="0" cb="0"/><line nr="50" mi="0" ci="16" mb="0" cb="0"/><line nr="51" mi="0" ci="16" mb="0" cb="0"/><line nr="52" mi="0" ci="16" mb="0" cb="0"/><line nr="53" mi="0" ci="16" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="0"/><line nr="56" mi="0" ci="16" mb="0" cb="0"/><line nr="57" mi="0" ci="16" mb="0" cb="0"/><line nr="58" mi="0" ci="16" mb="0" cb="0"/><line nr="60" mi="0" ci="16" mb="0" cb="0"/><line nr="61" mi="0" ci="16" mb="0" cb="0"/><line nr="62" mi="0" ci="16" mb="0" cb="0"/><line nr="63" mi="0" ci="16" mb="0" cb="0"/><line nr="64" mi="0" ci="16" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="0"/><line nr="66" mi="0" ci="16" mb="0" cb="0"/><line nr="67" mi="0" ci="16" mb="0" cb="0"/><line nr="69" mi="0" ci="16" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="2"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="18" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="16" ci="0" mb="2" cb="0"/><line nr="108" mi="5" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="606"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="44"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeaderParser.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="1" cb="1"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="1" cb="1"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="2"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="2"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="4"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="4"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="1" cb="3"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="2"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="9" mb="0" cb="4"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="1" cb="3"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="4"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="12" mb="0" cb="4"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="4"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="6"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="2" cb="2"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="1" cb="3"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="2"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="2"/><line nr="207" mi="0" ci="4" mb="1" cb="1"/><line nr="208" mi="0" ci="11" mb="1" cb="3"/><line nr="209" mi="0" ci="2" mb="1" cb="1"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="1" cb="1"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="9" mb="0" cb="4"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="17" mb="0" cb="2"/><line nr="226" mi="0" ci="6" mb="0" cb="2"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="9" mb="0" cb="4"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="15" mb="1" cb="5"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="427"/><counter type="BRANCH" missed="12" covered="86"/><counter type="LINE" missed="4" covered="87"/><counter type="COMPLEXITY" missed="12" covered="46"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeaderSource.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="10" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="17" ci="0" mb="2" cb="0"/><line nr="116" mi="4" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="17" ci="0" mb="2" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="2" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="1" cb="1"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="1" cb="1"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="7" mb="0" cb="4"/><line nr="202" mi="0" ci="10" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="1" cb="3"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="9" mb="0" cb="2"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="12" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="10" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="8" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="4"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="2"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="12" ci="0" mb="0" cb="0"/><line nr="235" mi="6" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="158" covered="258"/><counter type="BRANCH" missed="14" covered="28"/><counter type="LINE" missed="28" covered="58"/><counter type="COMPLEXITY" missed="14" covered="25"/><counter type="METHOD" missed="5" covered="13"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="AdditionalHeaderDefinition.java"><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="14" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="1" cb="1"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="1" cb="1"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="83"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Header.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="23" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="18" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="17" mb="0" cb="2"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="2"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="17" mb="0" cb="2"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="15" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="2"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="9" mb="0" cb="0"/><line nr="176" mi="0" ci="12" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="2"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="1" cb="1"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="2"/><line nr="205" mi="0" ci="2" mb="0" cb="2"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="1" cb="1"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="6" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="1" cb="1"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="4"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="17" mb="0" cb="2"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="1" cb="1"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="11" mb="0" cb="2"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="2" cb="2"/><line nr="267" mi="11" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="11" mb="0" cb="2"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="2"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="2"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="2"/><line nr="369" mi="0" ci="7" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="2"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="12" mb="0" cb="2"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="2"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="1" cb="1"/><line nr="410" mi="0" ci="8" mb="0" cb="2"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="2"/><line nr="413" mi="0" ci="7" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="2"/><line nr="424" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="8" mb="0" cb="2"/><line nr="426" mi="0" ci="2" mb="0" cb="2"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="6" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="16" mb="0" cb="2"/><line nr="436" mi="0" ci="4" mb="0" cb="2"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="722"/><counter type="BRANCH" missed="7" covered="75"/><counter type="LINE" missed="10" covered="144"/><counter type="COMPLEXITY" missed="10" covered="50"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeaderDefinition.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="1" cb="3"/><line nr="77" mi="14" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="15" mb="2" cb="4"/><line nr="147" mi="0" ci="15" mb="2" cb="4"/><line nr="157" mi="0" ci="15" mb="2" cb="4"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="1" cb="1"/><line nr="175" mi="17" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="2"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="1" cb="3"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="2"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="1" cb="1"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="2"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="1" cb="1"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="1" cb="1"/><line nr="220" mi="17" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="2"/><line nr="226" mi="0" ci="17" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="2"/><line nr="232" mi="0" ci="17" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="10" mb="1" cb="3"/><line nr="242" mi="3" ci="0" mb="2" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="245" mi="7" ci="0" mb="4" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="17" ci="0" mb="6" cb="0"/><line nr="254" mi="9" ci="0" mb="2" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="347"/><counter type="BRANCH" missed="28" covered="48"/><counter type="LINE" missed="12" covered="76"/><counter type="COMPLEXITY" missed="23" covered="39"/><counter type="METHOD" missed="2" covered="22"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="364" covered="2443"/><counter type="BRANCH" missed="68" covered="242"/><counter type="LINE" missed="60" covered="430"/><counter type="COMPLEXITY" missed="65" covered="171"/><counter type="METHOD" missed="11" covered="70"/><counter type="CLASS" missed="0" covered="12"/></package><package name="com/mycila/maven/plugin/license/util/resource"><class name="com/mycila/maven/plugin/license/util/resource/CustomClassLoader" sourcefilename="CustomClassLoader.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFolder" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFolder" desc="(Ljava/io/File;)V" line="37"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/util/resource/ResourceFinder" sourcefilename="ResourceFinder.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCompileClassPath" desc="(Ljava/util/List;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPluginClassPath" desc="(Ljava/lang/ClassLoader;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findResource" desc="(Ljava/lang/String;)Ljava/net/URL;" line="67"><counter type="INSTRUCTION" missed="2" covered="86"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toURL" desc="(Ljava/nio/file/Path;)Ljava/net/URL;" line="116"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="136"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="3" covered="36"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CustomClassLoader.java"><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResourceFinder.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="2"/><line nr="44" mi="0" ci="10" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="18" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="1" cb="3"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="136"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="3" covered="36"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="11" covered="165"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/mycila/maven/plugin/license/document"><class name="com/mycila/maven/plugin/license/document/Document" sourcefilename="Document.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Lcom/mycila/maven/plugin/license/header/HeaderDefinition;Ljava/lang/String;[Ljava/lang/String;Lcom/mycila/maven/plugin/license/document/DocumentPropertiesLoader;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeaderDefinition" desc="()Lcom/mycila/maven/plugin/license/header/HeaderDefinition;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="()Ljava/io/File;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilePath" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEncoding" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotSupported" desc="()Z" line="69"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasHeader" desc="(Lcom/mycila/maven/plugin/license/header/Header;Z)Z" line="73"><counter type="INSTRUCTION" missed="40" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateHeader" desc="(Lcom/mycila/maven/plugin/license/header/Header;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeProperties" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="save" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveTo" desc="(Ljava/io/File;)V" line="104"><counter type="INSTRUCTION" missed="20" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeHeader" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lcom/mycila/maven/plugin/license/header/Header;)Z" line="125"><counter type="INSTRUCTION" missed="25" covered="8"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseHeader" desc="()V" line="132"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="headerDetected" desc="()Z" line="138"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="261"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="9" covered="38"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/document/DocumentFactory" sourcefilename="DocumentFactory.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;Lcom/mycila/maven/plugin/license/document/DocumentPropertiesLoader;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDocuments" desc="(Ljava/lang/String;)Lcom/mycila/maven/plugin/license/document/Document;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapper" desc="(Ljava/lang/String;)Lcom/mycila/maven/plugin/license/document/Document;" line="50"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/document/PropertyPlaceholderResolver" sourcefilename="PropertyPlaceholderResolver.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replacePlaceholders" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replacePlaceholders" desc="(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseStringValue" desc="(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/Set;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="37" covered="117"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPlaceholderEndIndex" desc="(Ljava/lang/CharSequence;I)I" line="96"><counter type="INSTRUCTION" missed="19" covered="35"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substringMatch" desc="(Ljava/lang/CharSequence;ILjava/lang/CharSequence;)Z" line="118"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="58" covered="206"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="13" covered="43"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/document/DocumentType" sourcefilename="DocumentType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Lcom/mycila/maven/plugin/license/header/HeaderType;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="()Ljava/lang/String;" line="132"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultHeaderType" desc="()Lcom/mycila/maven/plugin/license/header/HeaderType;" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultHeaderTypeName" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultMapping" desc="()Ljava/util/Map;" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="680"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="705"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="94"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/mycila/maven/plugin/license/document/DocumentPropertiesLoader" sourcefilename="DocumentPropertiesLoader.java"/><sourcefile name="DocumentPropertiesLoader.java"/><sourcefile name="DocumentFactory.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="15" mb="0" cb="4"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyPlaceholderResolver.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="1" cb="1"/><line nr="58" mi="14" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="0" ci="14" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="1" cb="1"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="1" cb="1"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="1" cb="1"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="1" cb="1"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="9" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="206"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="13" covered="43"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Document.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="15" mb="1" cb="3"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="42" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="28" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="19" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="19" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="19" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="2" ci="8" mb="1" cb="1"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="24" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="0" ci="16" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="261"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="9" covered="38"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DocumentType.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="16" mb="0" cb="2"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="705"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="94"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="148" covered="1269"/><counter type="BRANCH" missed="13" covered="37"/><counter type="LINE" missed="22" covered="193"/><counter type="COMPLEXITY" missed="13" covered="44"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="2399" covered="7950"/><counter type="BRANCH" missed="292" covered="537"/><counter type="LINE" missed="443" covered="1339"/><counter type="COMPLEXITY" missed="284" covered="480"/><counter type="METHOD" missed="80" covered="268"/><counter type="CLASS" missed="4" covered="50"/></report>